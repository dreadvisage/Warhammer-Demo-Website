
/* The Modal (background) */
.modal {
  display: none; /* Hidden by default */

  justify-content: center;
  align-items: center;

  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
  display: flex;
  justify-content: center;
  align-items: center;
  
}
  

/* The Close Button */
.close {
  position: absolute;
  top: 0;
  right: 8px;
  color: #aaaaaa;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}

.image-table {
    background-color: rgb(109, 15, 15);
}

/* My code */

.wrapper-table {
  /* This gives a reference point to anchor the close button to. */
  position: relative;
  /* Padding controls how much space is around the image table in a uniform matter because
  of viewport image table data sizing. */
  padding: 40px;
  background-color: rgb(109, 15, 15);
  display: block;

  border: 3px solid black;
}

.image-table tr td {
  /* Ensure the image is actually centered within the td. Otherwise, even with perfect square 
  images, there is a slight padding difference on the bottom of the td cell*/
  display: inline-flex;
  justify-content: center;
  /* This removes the ever-so-slight spacing in between the tr and td so that the images are right next to each other */
  margin: -2px -1px;
  width: 170px;
}

@media (max-width: 900px) {
  .image-table tr td {
    width: 120px;
  }
}

.image-table tr td input[type=image],
.image-table tr td img {
  width: 100%;
}

.image-table tr td input[type=image]:hover,
.image-table tr td img:hover {
  cursor: pointer;
  transform: scale(0.9);
  opacity: 0.7;
}