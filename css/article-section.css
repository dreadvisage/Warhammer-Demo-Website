/* Load custom font */
@font-face {
    font-family: NotoSans-Regular;
    src: url("../fonts/Noto_Sans/NotoSans-Regular.ttf");
}

@font-face {
    font-family: WHFont;
    src: url("../fonts/kvc-warhammer-base.otf");
}

@font-face {
    font-family: NotoSans-SemiBold;
    src: url("../fonts/Noto_Sans/NotoSans-SemiBold.ttf");
}

body {
    margin: 0;
    padding: 0;
}
.display {
    /* Since the navbar has a fixed height, we just set the top margin to be that height
    to fit the display content */
    margin-top: 4em;

    display: flex;
}
#background-image {
    /* Ensures that no matter what, the background image remains in the same place on the 
    user's screen, even when scrolling. */
    position: fixed;
    /* Helps ensure that the background image stays behind all other elements */
    z-index: -1;
    /*background-image: url(../images/warhammer-background.jpg);*/
    width: 100vw;
    height: 100vh;
}
#article {
    /* Take up whatever space is left */
    width: 100%;
    /* Ensures the height of the readable area is at least 100% of the viewport height. If you want
    to only have the height extend however much text is available, remove this line. */
    /* TODO. This needs to be updated to something that by default, doesn't show the scrollbar */
    min-height: 100vh;
    /* 100% is different than 100vh. 100% refers to parent's element height whereas 100vh refers to 
    the viewport height. The viewport height is always either the height of the entire screen or less 
    whereas 100% allows expanding beyond the viewport height to accommodate elements (and then a 
    scrollbar may be introduced to allow viewing of those elements beyond the viewport height). */
    height: 100%;

    padding: 2em;
    background-color: white;
    font-family: NotoSans-Regular;
    font-size: 16px;
}

footer {
    display: flex;
}

footer .footer-content {
    width: 100%;
    background-color: white;
    font-size: 12px;
    padding: 2.7em;
    font-family: NotoSans-Regular;
}

footer .footer-content p {
    display: inline;
}

footer hr {
    margin-bottom: 2em;
}

#article img {
    display: block;
    width: min(100%, 640px);
    margin-left: auto;
    margin-right: auto;
}

.pad {
    /* As screen width gets bigger, the padding changes by an insignificant amount.
    As the screen gets smaller, the padding becomes much smaller, which means more article content,
    less padding as screen width gets smaller. */
    width: calc(90vw - 800px);
}

#article a, #article a:visited {
    color: #0000EE;
}

/* Aspect ratio will always be 16:9. iframe is weird and it needs this workaround so we give it a 
parent that the iframe can grow-to-fit (as a 16:9 aspect ratio video). 
https://stackoverflow.com/questions/25302836/responsive-video-iframes-keeping-aspect-ratio-with-only-css
Because padding doesn't have a `min-padding` css property, we instead need to use the css math functions 
to our advantage. 
https://stackoverflow.com/questions/38078957/can-we-define-min-margin-and-max-margin-max-padding-and-min-padding-in-css
*/
.aspect-ratio {
    position: relative;
    /* Whichever value is smaller, 100% of the parent width, or 640px. In short, this is a way to set the 
    max width of a video to be 640px */
    width: min(100%, 640px);
    /* Whichever value is smaller, 56.25% of the parent height, or 360px. In short, this is a way to set the 
    max height of a video to be 360px */
    padding-bottom: min(56.25%, 360px); 
    /* height is zero because padding bottom determine the height  */
    height: 0; 
    /* Centers the iframe within this parent */
    margin: 0 auto;
}

/* Adjust the iframe so it's rendered in the outer-width and outer-height of it's parent */
.aspect-ratio iframe {
    border: none;
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
}

h1 {
    text-align: center;
    font-size: 70px;
    font-family: WHFont;
    background: -webkit-linear-gradient(top, silver, rgb(129, 104, 72));
    background-clip: text;
    -webkit-text-stroke-width: 0.5px;
    -webkit-text-stroke-color: black;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.quote {
    font-family: NotoSans-SemiBold;
    text-align: center;
    font-size: 18px;
    padding: 20px 0;
}